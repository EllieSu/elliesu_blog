{"pages":[],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/hello-world/"},{"title":"hexo 部落格建立 Part1","text":"本篇文章將說明： 如何安裝 hexo hexo 專案建置 將 hexo 加入 Git 版本控管 如何安裝 hexo需安裝： Node.js (建議使用 Node.js 10.0 及以上版本)目前安裝 node.js 版本為 LTS 12.13.1 Git hexo1npm install hexo-cli -g 若安裝 hexo 時顯示以下訊息，表示有權限問題 npm WARN checkPermissions Missing write access to /usr/local/lib/node_modules 使用 sudo 即可，因為 cli 指令會使用到命令列，必須授與權限才可使用-g 表示 global 全域安裝 1sudo npm install hexo-cli -g 安裝一鍵部署，若操作過程顯示下列錯誤訊息可能也表示未安裝此套件 ERROR Deployer not found: git 1npm install hexo-deployer-git --save hexo 專案建置安裝完成後即可切換到自己慣用的工作區，像我的話是 github 資料夾底下 1cd ~&#x2F;github 使用 hexo 方便的內建指令就可一鍵產生專案 123hexo init elliesu_blogcd elliesu_blognpm install Git repository在自己的 github 建立一個新的 repository: elliesu_blog，repository 的名稱要與資料夾名稱相同 回到 hexo 專案內，開啟 _config.yml，設定產生靜態網站並部署時要推送到遠端的 git 位置，也就是剛剛在 github 新開的 repository，repository 路徑規則為 http://github.com/[github_name]/[repository_name].git，要推送的分支設定為 master 1234deploy: type: git repository: http://github.com/EllieSu/elliesu_blog.git branch: master 一鍵部署，d 表示 deploy，-g 表示產生靜態網站 1hexo d -g 推送完成後，到自己的 github 頁面會看到 master 分支的檔案怎麼只剩下靜態的部分？原因是因為 hexo 部署時只會把靜態網站推送至遠端 master，所以遠端的 master 分支只會有專案中靜態網站的資料那要怎麼把專案中其他的資料夾與檔案也加入追蹤呢？很簡單首先，為了不混淆靜態網站與我們平常的編輯模式，我們必須要新增一個分支 hexo 新增並切換分支 hexo，推送編輯模式至遠端 git，這樣就可以成功把編輯模式與部署分離囉 12345git checkout -b hexogit add .git commit -m &quot;first commit&quot;git remote add origin https:&#x2F;&#x2F;github.com&#x2F;EllieSu&#x2F;elliesu_blog.gitgit push -u origin hexo 下一章會介紹如何更換 hexo 主題、自訂網域名稱、SSL 免費憑證設定 ReferenceHexo 文件","link":"/build-hexo-blog-part-1/"}],"tags":[],"categories":[]}